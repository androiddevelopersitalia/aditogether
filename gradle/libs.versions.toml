[versions]
androidxActivity = "1.6.1"
androidxComposeBom = "2022.12.00"
androidxCore = "1.9.0"
androidxLifecycle = "2.5.1"
detekt = "1.22.0"
detektRulesCompose = "0.0.26"
gradleAndroidPlugin = "7.3.1"
koin = "3.3.2"
koinAnnotation = "1.1.0"
koinCompose = "3.4.1"
koinKtor = "3.3.0"
kotlin = "1.8.0"
kotlinCoroutines = "1.6.4"
ktor = "2.2.3"

[libraries]
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "androidxComposeBom" }

androidx-compose-activity = { group = "androidx.activity", name = "activity-compose" }
androidx-compose-material = { group = "androidx.compose.material3", name = "material3" }
androidx-compose-navigation = { group = "androidx.navigation", name = "navigation-compose" }
androidx-compose-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-compose-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-compose-uiTest = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-compose-uiTest-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }

androidx-activity = { module = "androidx.activity:activity-compose", version.ref = "androidxActivity" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
androidx-ktx = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }

detekt-rules-compose = { module = "com.twitter.compose.rules:detekt", version.ref = "detektRulesCompose" }
detekt-rules-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinCoroutines" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinCoroutines" }

ktor-client-android = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koinAnnotation" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinCompose" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

gradle-aditogether-lint = { module = "aditogether.buildtools.lint:lint" }
gradle-android = { module = "com.android.tools.build:gradle", version.ref = "gradleAndroidPlugin" }
gradle-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradle-kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }

[bundles]
# TBD
